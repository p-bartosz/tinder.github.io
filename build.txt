# # Sample workflow for building and deploying a Jekyll site to GitHub Pages
# name: Deploy Jekyll with GitHub Pages dependencies preinstalled

# on:
#   # Runs on pushes targeting the default branch
#   push:
#     branches: ["master"]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write

# # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
# concurrency:
#   group: "pages"
#   cancel-in-progress: false

# jobs:
#   build_deploy_vue:
#     runs-on: ubuntu-latest
#     name: Build and Deploy Vue
#     steps:
#     - uses: actions/checkout@v2
#     - id: Build-Deploy-Vue
#       uses: thefrustrateddev/vue-deploy-github-pages@v1.0.0
#       with:
#         username: 'p-bartosz'
#         reponame: 'tinder.github.io'
#         token: ${{ secrets.GITHUB_TOKEN }} # no need to change this line this is used to create the branch in your application repository

#   # build:
#   #   runs-on: ubuntu-latest

#   #   steps:
#   #     - name: Checkout repository
#   #       uses: actions/checkout@v2

#   #     - name: Set up Node.js
#   #       uses: actions/setup-node@v3
#   #       with:
#   #         node-version: 14

#   #     - name: Install dependencies
#   #       run: npm install

#   #     - name: Build
#   #       run: npm run build

#   #     - name: Upload artifact
#   #       uses: actions/upload-pages-artifact@v2

#   # deploy:
#   #   environment:
#   #     name: github-pages
#   #     url: ${{ steps.deployment.outputs.page_url }}
#   #   runs-on: ubuntu-latest
#   #   needs: build
#   #   steps:
#   #     - name: Deploy to GitHub Pages
#   #       id: deployment
#   #       uses: actions/deploy-pages@v2name: Deploy to GitHub Pages


on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Build and deploy
      run: |
        npm run build
        git config user.email $GH_EMAIL
        git config user.name $GH_NAME
        git remote rm origin
        git remote add origin https://username:$GH_TOKEN@github.com/username/repo.git
        npx gh-pages -d dist
      
