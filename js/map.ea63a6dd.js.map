{"version":3,"file":"js/map.ea63a6dd.js","mappings":"sKAEM,SAAUA,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,GAAwBC,EAAAA,EAAAA,IAAkB,cAC1CC,GAAqBD,EAAAA,EAAAA,IAAkB,WAE7C,OAAQE,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoBC,EAAAA,GAAW,KAAM,ECJ3DC,EAAAA,EAAAA,IAkBUJ,EAAA,CAjBLK,OAAQb,EAAAa,OACRC,KAAM,EACP,cAAY,UACZC,MAAA,gCDMC,CACDC,SAASC,EAAAA,EAAAA,KCAL,IAA6B,GDC9BR,EAAAA,EAAAA,KAAW,ICHdC,EAAAA,EAAAA,IAOEC,EAAAA,GAAA,MAAAO,EAAAA,EAAAA,IALuBlB,EAAAmB,SAAO,CAApBC,EAAGC,MDEHZ,EAAAA,EAAAA,OCJZa,EAAAA,EAAAA,IAOEhB,EAAA,CANGiB,IAAKF,EAELG,SAAUJ,EAAEI,SACZC,WAAW,EACXC,WAAW,EACXC,QAAKC,GAAE5B,EAAAa,OAAOO,EAAEI,UDId,KAAM,EAAG,CAAC,WAAY,eACvB,SAENK,EAAG,GACF,EAAG,CAAC,YCJTC,EAAAA,EAAAA,GAAqD,UAA5CH,QAAK1B,EAAA,KAAAA,EAAA,GDQhB,IAAI8B,ICRc/B,EAAAgC,aAAAhC,EAAAgC,eAAAD,KAAa,oBDU1B,GACL,C,cCLA,GAAeE,EAAAA,EAAAA,IAAgB,CAC7BC,IAAAA,GACE,MAAO,CACLC,aAAc,CACZC,KAAKC,EAAAA,EAAAA,IAAI,GACTC,KAAKD,EAAAA,EAAAA,IAAI,IAEXxB,OAAQ,CAACuB,IAAK,UAAWE,IAAK,SAC9BnB,QAAS,CACP,CACEK,SAAU,CACRY,IAAK,UAAWE,IAAK,UAGzB,CACEd,SAAU,CACRY,IAAK,GAAIE,IAAK,MAKxB,EACAC,QAAS,CACPP,WAAAA,GACMQ,UAAUC,aACZD,UAAUC,YAAYC,oBAAoBlB,IAGxCmB,KAAKxB,QAAQ,GAAGK,SAASY,IAAMZ,EAASoB,OAAOC,SAC/CF,KAAKxB,QAAQ,GAAGK,SAASc,IAAMd,EAASoB,OAAOE,SAAS,GAG9D,K,QCtDJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAShD,KAEpE,O","sources":["webpack://tinder/./src/pages/MapView.vue?8204","webpack://tinder/./src/pages/MapView.vue","webpack://tinder/./src/pages/MapView.vue?10b8"],"sourcesContent":["import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_GMapMarker = _resolveComponent(\"GMapMarker\")!\n  const _component_GMapMap = _resolveComponent(\"GMapMap\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_GMapMap, {\n      center: _ctx.center,\n      zoom: 7,\n      \"map-type-id\": \"terrain\",\n      style: {\"width\":\"500px\",\"height\":\"300px\"}\n    }, {\n      default: _withCtx(() => [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.markers, (m, index) => {\n          return (_openBlock(), _createBlock(_component_GMapMarker, {\n            key: index,\n            position: m.position,\n            clickable: true,\n            draggable: true,\n            onClick: ($event: any) => (_ctx.center=m.position)\n          }, null, 8, [\"position\", \"onClick\"]))\n        }), 128))\n      ]),\n      _: 1\n    }, 8, [\"center\"]),\n    _createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.getLocation && _ctx.getLocation(...args)))\n    }, \"weź lokalizację\")\n  ], 64))\n}","<template>\n\n  <GMapMap\n      :center=\"center\"\n      :zoom=\"7\"\n      map-type-id=\"terrain\"\n      style=\"width: 500px; height: 300px\"\n  >\n    <!-- <GMapCluster\n      :setMaxZoom=\"() => {}\"\n    > -->\n      <GMapMarker\n          :key=\"index\"\n          v-for=\"(m, index) in markers\"\n          :position=\"m.position\"\n          :clickable=\"true\"\n          :draggable=\"true\"\n          @click=\"center=m.position\"\n      />\n    <!-- </GMapCluster> -->\n  </GMapMap>\n  <button @click=\"getLocation\">weź lokalizację</button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\n\nexport default defineComponent({\n  data() {\n    return {\n      userPosition: {\n        lat: ref(0),\n        lng: ref(0)\n      },\n      center: {lat: 51.093048, lng: 6.842120},\n      markers: [\n        {\n          position: {\n            lat: 51.093048, lng: 6.842120\n          },\n        },\n        {\n          position: {\n            lat: 52, lng: 10\n          },\n        }\n      ]\n    }\n  },\n  methods: {\n    getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          // this.userPosition.lat = position.coords.latitude;\n          // this.userPosition.lng = position.coords.longitude;\n          this.markers[1].position.lat = position.coords.latitude;\n          this.markers[1].position.lng = position.coords.longitude;\n        })\n      }\n    }\n  }\n});\n</script>\n","import { render } from \"./MapView.vue?vue&type=template&id=a38c7be4&ts=true\"\nimport script from \"./MapView.vue?vue&type=script&lang=ts\"\nexport * from \"./MapView.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_GMapMarker","_resolveComponent","_component_GMapMap","_openBlock","_createElementBlock","_Fragment","_createVNode","center","zoom","style","default","_withCtx","_renderList","markers","m","index","_createBlock","key","position","clickable","draggable","onClick","$event","_","_createElementVNode","args","getLocation","defineComponent","data","userPosition","lat","ref","lng","methods","navigator","geolocation","getCurrentPosition","this","coords","latitude","longitude","__exports__"],"sourceRoot":""}